<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[SAIKAWA]]></title>
  <link href="http://muyuu.github.io/atom.xml" rel="self"/>
  <link href="http://muyuu.github.io/"/>
  <updated>2014-04-11T22:37:57+09:00</updated>
  <id>http://muyuu.github.io/</id>
  <author>
    <name><![CDATA[Muyuu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Emacsの一時ファイルを作らない設定]]></title>
    <link href="http://muyuu.github.io/blog/2014/04/11/emacs-no-tempfile/"/>
    <updated>2014-04-11T21:58:57+09:00</updated>
    <id>http://muyuu.github.io/blog/2014/04/11/emacs-no-tempfile</id>
    <content type="html"><![CDATA[<p>Emacsを使っていていつも邪魔だなぁと思うのが「.<em>~」の一時保存ファイル。あと「#.</em>#」とかオートセーブファイルもほとんどいらない。</p>

<p>なので消します。</p>

<p>~/.emacs/init.el に以下を記述</p>

<pre><code>;; *.~ を作らない
(setq make-backup-files nil)
;; .#* を作らない
(setq auto-save-default nil)
</code></pre>

<p>これで邪魔なファイルは作られなくなるけどその代わりに1世代前のファイルに戻したいって事ができなくなるから注意が必要っちゃ必要。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GruntでWatch開始時に常にChromeで開く方法]]></title>
    <link href="http://muyuu.github.io/blog/2014/04/11/open-chrome-for-grunt/"/>
    <updated>2014-04-11T21:07:20+09:00</updated>
    <id>http://muyuu.github.io/blog/2014/04/11/open-chrome-for-grunt</id>
    <content type="html"><![CDATA[<p>Gruntのgrunt-contrib-connectを使って各案件のローカル環境を作っている人で、「開発はChromeでやりたいんだけどデフォルトのブラウザはSafariなんだよね」って人向けのTIPS、というか僕向けのTIPS。</p>

<h2>必要なパッケージ</h2>

<p>grunt-contorib-connectにはブラウザを指定する能力は備わっていないのそいつの「ブラウザを開く」能力は使わないようにする。代わりに<a href="https://www.npmjs.org/package/grunt-open">grunt-open</a>を使えばブラウザを指定することができるのでそれを使う</p>

<h2>インストール</h2>

<p>プロジェクトディレクトリからターミナルで以下を。</p>

<pre><code>npm install --save-dev grunt-open
</code></pre>

<p>Gruntfile.coffeeに記述</p>

<pre><code># page open
open:
  server:
    url: 'http://localhost:&lt;%= connect.server.options.port %&gt;'
    app: 'Google Chrome'

# タスク設定箇所
grunt.registerTask "default", ["connect", "open", "esteWatch"]
</code></pre>

<h2>使い方</h2>

<p>上記設定ができたらタスクを起動すればChromeでページが表示されるはず</p>

<p>GruntかわいいよGrunt</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[製的サイトジェネレータという選択]]></title>
    <link href="http://muyuu.github.io/blog/2014/04/10/test/"/>
    <updated>2014-04-10T16:50:40+09:00</updated>
    <id>http://muyuu.github.io/blog/2014/04/10/test</id>
    <content type="html"><![CDATA[<p>何で今更感は否めないけど今更製的サイトジェネレータでBlogを書く事にしました、どうぞよろしく。</p>

<p>すでに何年も書いてるブログがあるのに何で今更新しいのを作ったかなんだけど、やっぱりどうもWordPressってのは巨人かつ富豪的なシステムだからどうしても「ちゃちゃっと書いてちゃちゃっと公開」ってわけにはいかねーんだよな。ヒウィゴーってわけにもいかねーんだよ。だからいちいちhtmlタグとかを書かずMarkdownですませられるような、そもそもいちいちブラウザでページを開いて誤操作の起こりやすいWebフォームで投稿とかをしなくて良いブログにしたかったです。</p>

<p>そういう意味じゃMarsEditは非常に惜しい存在だったね。あれはアプリで記述・投稿できるしいちおうMarkdownで書く事も出来た。でもあれの何だかなぁと思ってた点はMarkdownで書いてそのままプレビューはできるのにそのまま投稿してしまったらhtmlに変換せずに投稿されてしまうことだよね。バカなの？変換しないとダメだからプレビューはわざわざ変換してるんでしょ？そこは気ぃ使って変換しなよ。そんな感じ。</p>

<p>ということで今後はこっちに色々メモを書こうと思ってはいるんだけど元のブログも結構長い事やってるし愛着はあるし捨てるつもりは全くないんだけどそれでもやっぱり何だかんだでフロントエンド界隈にもコマンドでの制作フローが割と普通になってきたし僕も段々コマンドのフローに慣れてきたしむしろ慣れてしまえばコマンドで結構いろんな事ができることも分かったしできたら色々コマンドでやれれば良いなぁって思うようになってきたしなんだったらコマンドを快適にできるようにbashからzshに変えてみたりしたくらいだし、コマンドステキなコマンド信者に昇格したのか退化したのかよく分からん感じになったね。</p>

<p>でもWordPressが嫌いってわけじゃないし、むしろ結構簡単にCMSが手に入るって意味ではまだまだ全然有効なケースもあるし今後も引き続き頑張って頂きたいし僕も追っかけていこうとは思ってるしあのブログも続けていこうと思うんだけど正直今は棲み分けをどうしようとか何も考えずに始めちゃったからいつか棲み分けが出来ると良いなぁくらいのノリ。</p>

<p>とりあえず入れてみた感想としては、思ったほど躓かずにインストール・公開までこぎ着けられたから知識の高速道路もあるしそもそもの作業の高速化もドンドン進んでるよなーと思った。</p>

<p>あとは強いて言うとこのOctoPressはRuby製だから誰かこんな感じのNode.js版作ってくれたら速攻移行するんだけどなーと思ってるところ。Node.js版が良い理由があるわけじゃないんだけど多分Rubyより僕がカスタムとかできるんじゃね？と思ってるからかな。ほらあとerbとか嫌いだし。Jadeサイコーなのが大きな理由かな。でもまぁこれを機にRubyの知識を高めるのも悪くないししばらくはこれでやってみようかなぁと思います。では。</p>
]]></content>
  </entry>
  
</feed>
